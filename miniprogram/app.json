{
    "pages": [
        "example/index",
        "example/packages/packages",
        "example/go-imports/go-imports",
        "example/exported-names/exported-names",
        "example/functions/functions",
        "example/functions-continued/functions-continued",
        "example/multiple-results/multiple-results",
        "example/named-results/named-results",
        "example/variables/variables",
        "example/variables-with-initializers/variables-with-initializers",
        "example/short-variable-declarations/short-variable-declarations",
        "example/basic-types/basic-types",
        "example/zeros/zeros",
        "example/type-conversions/type-conversions",
        "example/type-inference/type-inference",
        "example/constants/constants",
        "example/numeric-constants/numeric-constants",
        "example/go-for/go-for",
        "example/for-continued/for-continued",
        "example/for-is-gos-while/for-is-gos-while",
        "example/forever/forever",
        "example/go-if/go-if",
        "example/if-with-a-short-statement/if-with-a-short-statement",
        "example/if-and-else/if-and-else",
        "example/go-switch/go-switch",
        "example/switch-evaluation-order/switch-evaluation-order",
        "example/switch-with-no-condition/switch-with-no-condition",
        "example/go-defer/go-defer",
        "example/defer-multi/defer-multi",
        "example/pointers/pointers",
        "example/structs/structs",
        "example/struct-fields/struct-fields",
        "example/struct-pointers/struct-pointers",
        "example/struct-literals/struct-literals",
        "example/go-array/go-array",
        "example/slices/slices",
        "example/slices-pointers/slices-pointers",
        "example/slice-literals/slice-literals",
        "example/slice-bounds/slice-bounds",
        "example/slice-len-cap/slice-len-cap",
        "example/nil-slices/nil-slices",
        "example/making-slices/making-slices",
        "example/slices-of-slice/slices-of-slice",
        "example/append/append",
        "example/range/range",
        "example/range-continued/range-continued",
        "example/go-maps/go-maps",
        "example/map-literals/map-literals",
        "example/map-literals-continued/map-literals-continued",
        "example/mutating-maps/mutating-maps",
        "example/function-values/function-values",
        "example/function-closures/function-closures",
        "example/methods/methods",
        "example/methods-funcs/methods-funcs",
        "example/methods-continued/methods-continued",
        "example/methods-pointers/methods-pointers",
        "example/methods-pointers-explained/methods-pointers-explained",
        "example/indirection/indirection",
        "example/indirection-values/indirection-values",
        "example/methods-with-pointer-receivers/methods-with-pointer-receivers",
        "example/interfaces/interfaces",
        "example/interfaces-are-satisfied-implicitly/interfaces-are-satisfied-implicitly",
        "example/interface-values/interface-values",
        "example/interface-values-with-nil/interface-values-with-nil",
        "example/nil-interface-values/nil-interface-values",
        "example/empty-interface/empty-interface",
        "example/type-assertions/type-assertions",
        "example/type-switches/type-switches",
        "example/stringer/stringer",
        "example/errors/errors",
        "example/reader/reader",
        "example/go-images/go-images",
        "example/goroutines/goroutines",
        "example/channels/channels",
        "example/buffered-channels/buffered-channels",
        "example/range-and-close/range-and-close",
        "example/select/select",
        "example/default-selection/default-selection",
        "example/mutex-counter/mutex-counter",
        "example/exercise-web-crawler/exercise-web-crawler",
        "example/package-fmt/package-fmt",
        "example/package-os/package-os",
        "example/package-time/package-time",
        "example/package-log/package-log",
        "example/package-math/package-math",
        "example/package-context/package-context",
        "example/package-archive/package-archive",
        "example/package-bufio/package-bufio",
        "example/package-builtin/package-builtin",
        "example/package-bytes/package-bytes",
        "example/package-compress/package-compress",
        "example/package-container/package-container",
        "example/package-crypto/package-crypto",
        "example/package-database/package-database",
        "example/package-encoding/package-encoding",
        "example/package-flag/package-flag",
        "example/package-hash/package-hash",
        "example/package-html/package-html",
        "example/package-image/package-image",
        "example/package-index/package-index",
        "example/package-io/package-io",
        "example/package-net/package-net",
        "example/package-path/package-path",
        "example/package-regexp/package-regexp",
        "example/package-runtime/package-runtime",
        "example/package-sort/package-sort",
        "example/package-strconv/package-strconv",
        "example/package-strings/package-strings",
        "example/package-sync/package-sync",
        "example/package-text/package-text",
        "example/gin-01/gin-01",
        "example/gin-02/gin-02",
        "example/gin-03/gin-03",
        "example/gin-04/gin-04",
        "example/gin-05/gin-05",
        "example/gin-06/gin-06",
        "example/gin-07/gin-07",
        "example/gin-08/gin-08",
        "example/gin-09/gin-09",
        "example/gin-10/gin-10",
        "example/gin-11/gin-11",
        "example/gin-12/gin-12",
        "example/gin-13/gin-13",
        "example/gin-14/gin-14",
        "example/gin-15/gin-15",
        "example/gin-16/gin-16",
        "example/gin-17/gin-17",
        "example/gin-18/gin-18",
        "example/gin-19/gin-19"







    ],
    "window": {
        "navigationBarTextStyle": "black",
        "navigationBarTitleText": "爱上Go语言",
        "navigationBarBackgroundColor": "#f8f8f8",
        "backgroundColor": "#f8f8f8"
    },
    "networkTimeout": {
        "request": 10000,
        "connectSocket": 10000,
        "uploadFile": 10000,
        "downloadFile": 10000
    },
    "debug": true
}